<!-- app/views/orders/index.html.erb -->
<div class="container mx-auto px-4 py-8">
  <!-- Page Header -->
  <div class="mb-8">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
      <div>
        <h1 class="text-3xl font-bold text-gray-900 mb-2">Orders</h1>
        <p class="text-gray-600">Manage and track all your orders</p>
      </div>
    </div>
  </div>

  <!-- Filters and Search 
  <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4 mb-6">
    <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4">
      Search
      <div class="flex-1 max-w-md">
        <%= form_with url: orders_path, method: :get, local: true, class: "flex" do |form| %>
          <div class="relative flex-1">
            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
              <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </div>
            <%= form.text_field :search, 
                value: params[:search],
                placeholder: "Search orders...", 
                class: "bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-l-lg focus:ring-pink-500 focus:border-pink-500 block w-full pl-10 p-2.5" %>
          </div>
          <%= form.submit "Search", 
              class: "px-4 py-2.5 bg-pink-600 hover:bg-pink-700 text-white text-sm font-medium rounded-r-lg border border-pink-600 transition-colors duration-200" %>
        <% end %>
      </div>
  </div>
  -->

  <!-- Orders Table -->
  <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
    <% if @orders.any? %>
      <!-- Table Header -->
      <div class="bg-gray-50 border-b border-gray-200">
        <div class="overflow-x-auto">
          <table class="min-w-full">
            <thead>
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Order Details
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Project & Items
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Delivery Date
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Total
                </th>
                <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Actions
                </th>
              </tr>
            </thead>
          </table>
        </div>
      </div>

      <!-- Table Body -->
      <div class="divide-y divide-gray-200">
        <% @orders.each do |order| %>
          <div class="hover:bg-gray-50 transition-colors duration-200">
            <div class="overflow-x-auto">
              <table class="min-w-full">
                <tbody>
                  <tr>
                    <!-- Order Details -->
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="flex flex-col">
                        <div class="text-sm font-medium text-gray-900">
                          #<%= order.id.to_s.rjust(6, '0') %>
                        </div>
                        <div class="text-sm text-gray-500">
                          <%= order.created_at.strftime("%b %d, %Y") %>
                        </div>
                        <div class="text-xs text-gray-400">
                          <%= order.created_at.strftime("%I:%M %p") %>
                        </div>
                      </div>
                    </td>

                    <!-- Project & Items -->
                    <td class="px-6 py-4">
                      <div class="flex flex-col">
                        <div class="text-sm font-medium text-gray-900 mb-1">
                          <%= order.project&.name || "No Project" %>
                        </div>
                        <div class="text-sm text-gray-600 mb-2">
                          <%= pluralize(order.order_items.select(:product_id).distinct.count, 'product') %>
                        </div>
                        <!-- Order Items Preview -->
                        <div class="flex flex-wrap gap-1">
                          <% order.order_items.includes(:product).group_by(&:product).first(3).each do |product, items| %>
                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-pink-100 text-pink-800">
                              <%= product&.name || "Unknown Product" %>
                              <span class="ml-1 text-pink-600">
                                (<%= items.sum(&:quantity) %>)
                              </span>
                            </span>
                          <% end %>
                          <% if order.order_items.select(:product_id).distinct.count > 3 %>
                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-600">
                              +<%= order.order_items.select(:product_id).distinct.count - 3 %> more
                            </span>
                          <% end %>
                        </div>
                      </div>
                    </td>

                    <!-- Delivery Date -->
                    <td class="px-6 py-4 whitespace-nowrap">
                      <% if order.delivery_date.present? %>
                        <div class="text-sm text-gray-900">
                          <%= order.delivery_date.strftime("%b %d, %Y") %>
                        </div>
                        <% days_until = (order.delivery_date - Date.current).to_i %>
                        <div class="text-xs <%= days_until < 0 ? 'text-red-600' : days_until <= 3 ? 'text-orange-600' : 'text-gray-500' %>">
                          <% if days_until < 0 %>
                            <%= pluralize(days_until.abs, 'day') %> overdue
                          <% elsif days_until == 0 %>
                            Today
                          <% elsif days_until == 1 %>
                            Tomorrow
                          <% else %>
                            <%= pluralize(days_until, 'day') %> away
                          <% end %>
                        </div>
                      <% else %>
                        <span class="text-sm text-gray-400">Not set</span>
                      <% end %>
                    </td>

                    <!-- Total -->
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="text-xs text-gray-500">
                        <%= pluralize(order.total_quantity || 0, 'pc') %>
                      </div>
                    </td>

                    <!-- Actions -->
                    <td class="px-6 py-4 whitespace-nowrap text-right">
                      <div class="flex items-center justify-end space-x-2">
                        <%= link_to order_path(order), 
                            class: "inline-flex items-center p-2 text-sm font-medium text-gray-500 hover:text-pink-600 transition-colors duration-200",
                            title: "View Order" do %>
                          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                          </svg>
                        <% end %>
                      </div>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        <% end %>
      </div>
    <% else %>
      <!-- Empty State -->
      <div class="text-center py-12">
        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
        </svg>
        <h3 class="mt-2 text-sm font-medium text-gray-900">No orders found</h3>
        <p class="mt-1 text-sm text-gray-500">
          <% if params[:search].present? || params[:status].present? %>
            Try adjusting your search or filter criteria.
          <% else %>
            Get started by creating a new order.
          <% end %>
        </p>
        <div class="mt-6">
          <% if params[:search].present? || params[:status].present? %>
            <%= link_to "Clear Filters", orders_path, 
                class: "inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 transition-colors duration-200" %>
          <% else %>
            <%= link_to "Create New Order", projects_path, 
                class: "inline-flex items-center px-4 py-2 bg-pink-600 hover:bg-pink-700 text-white text-sm font-medium rounded-lg transition-colors duration-200" %>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>

  <!-- Pagination -->
  <% if @orders.respond_to?(:total_pages) %>
    <div class="flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6 mt-6">
      <div class="flex flex-1 justify-between sm:hidden">
        <% if @orders.prev_page %>
          <%= link_to "Previous", orders_path(page: @orders.prev_page, search: params[:search], status: params[:status]), 
              class: "relative inline-flex items-center rounded-lg border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50" %>
        <% end %>
        <% if @orders.next_page %>
          <%= link_to "Next", orders_path(page: @orders.next_page, search: params[:search], status: params[:status]), 
              class: "relative ml-3 inline-flex items-center rounded-lg border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50" %>
        <% end %>
      </div>
      
      <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
        <div>
          <p class="text-sm text-gray-700">
            Showing
            <span class="font-medium"><%= (@orders.current_page - 1) * @orders.limit_value + 1 %></span>
            to
            <span class="font-medium"><%= [@orders.current_page * @orders.limit_value, @orders.total_count].min %></span>
            of
            <span class="font-medium"><%= @orders.total_count %></span>
            results
          </p>
        </div>
        
        <div>
          <%= paginate @orders, theme: 'twitter_bootstrap_4', 
              params: { search: params[:search], status: params[:status] },
              class: "flex items-center space-x-1" %>
        </div>
      </div>
    </div>
  <% end %>
</div>

<!-- Flowbite Dropdown Script -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Initialize dropdowns
  document.querySelectorAll('[data-dropdown-toggle]').forEach(function(trigger) {
    const targetId = trigger.getAttribute('data-dropdown-toggle');
    const dropdown = document.getElementById(targetId);
    
    if (dropdown) {
      trigger.addEventListener('click', function(e) {
        e.stopPropagation();
        
        // Close other dropdowns
        document.querySelectorAll('[id^="dropdown-"]').forEach(function(other) {
          if (other !== dropdown) {
            other.classList.add('hidden');
          }
        });
        
        // Toggle current dropdown
        dropdown.classList.toggle('hidden');
      });
    }
  });
  
  // Close dropdowns when clicking outside
  document.addEventListener('click', function() {
    document.querySelectorAll('[id^="dropdown-"]').forEach(function(dropdown) {
      dropdown.classList.add('hidden');
    });
  });
});
</script>